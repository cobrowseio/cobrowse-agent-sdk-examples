{"version":3,"sources":["App.js","index.js"],"names":["App","props","className","style","margin","devices","map","d","onClick","connect","device","id","label","display","alignItems","width","height","marginLeft","platform","onCode","handleCode","border","online","borderRadius","marginTop","Object","keys","custom_data","key","padding","fontSize","background","sessions","s","session","openSession","cursor","cobrowse","CobrowseAPI","fetchToken","demoid","a","window","localStorage","cobrowse_demo_id","fetch","api","res","json","token","refresh","Promise","all","list","state","activated","Date","forEach","subscribe","render","on","watch","win","attachContext","ctx","ended","close","destroy","setTimeout","console","log","endSession","open","recorded","code","get","ReactDOM","StrictMode","onBlur","e","target","value","defaultValue","toJSON","document","getElementById"],"mappings":"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","file":"static/js/main.7e1b73d7.chunk.js","sourcesContent":["import { SmartConnectButton, PlatformIcon, Device, Session, CodeEntry } from 'cobrowse-agent-ui'\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\" style={{margin: 15}}>\n      <h2>Smart Connect Buttons</h2>\n      <p>These buttons change style and become clickable when a device comes online.</p>\n      { props.devices.map(d => <SmartConnectButton key={d.id} onClick={props.connect} device={d} />) }\n      <p>Customise button labels</p>\n      { props.devices.map(d => <SmartConnectButton key={d.id} label={\n        <div style={{display:'flex', alignItems:'center'}}>\n          <PlatformIcon style={{width: 20, height: 20, marginLeft:0}} platform={d.device.platform} />\n          <span style={{marginLeft:7}}>Join</span>\n        </div>\n        } onClick={props.connect} device={d} />)\n      }\n\n      <h2>Six Digit Code Entry</h2>\n      <p>A component for accepting a screen share code.</p>\n      <CodeEntry onCode={props.handleCode} />\n\n      <h2>Device Listing</h2>\n      <p>A list of devices whose details update in real time.</p>\n      { props.devices.map(d => <Device key={d.id} device={d} connect={props.connect} /> )}\n\n      <p>A device list with some customisation.</p>\n      { props.devices.map(d => (\n        <div key={d.id} style={{border:`2px solid ${d.online?'orange':'#eee'}`, borderRadius:5, marginTop: 7}}>\n          <Device style={{border: '0px none', marginTop: 7}} device={d}>\n            <button>Custom Button</button>\n          </Device>\n          { Object.keys(d.custom_data).map(key => (\n            <div style={{display:'inline-block', margin: 4, padding: '3px 7px', fontSize:12, borderRadius:10, background:'#f3f3f3'}} key={key}>\n              <b>{key}</b><span> = </span><code>{d.custom_data[key]}</code>\n            </div>\n          ))}\n        </div>\n      ))}\n\n      <h2>Session Listing</h2>\n      <p>A list of previous sessions.</p>\n      { props.sessions.map(s => <Session key={s.id} session={s} onClick={() => props.openSession(s)} style={{cursor:'pointer'}} />)}\n\n      <p>A session list with some customisation.</p>\n      { props.sessions.map(s => (\n        <div key={s.id} style={{borderRadius:5, marginTop: 7}}>\n          <Session style={{border: '0px none', marginTop: 7}} onClick={() => props.openSession(s)} session={s} />\n          { Object.keys(s.custom_data).map(key => (\n            <div style={{display:'inline-block', margin: 4, padding: '3px 7px', fontSize:12, borderRadius:10, background:'#f3f3f3'}} key={key}>\n              <b>{key}</b><span> = </span><code>{s.custom_data[key]}</code>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App\n","import CobrowseAPI from 'cobrowse-agent-sdk'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n// create an API instance\nconst cobrowse = new CobrowseAPI()\n\nasync function fetchToken (demoid) {\n  // !! WARNING READ THIS !!\n  // You should NOT use this endpoint to get your own token. This endpoint is\n  // specific to the cobrowse.io hosted online demo. It will not work with your\n  // account and devices.\n  // You should fetch a token in an authenticated way from your own server for\n  // the user. See our documentation on generating a JWT for cobrowse:\n  // https://docs.cobrowse.io/agent-side-integrations/custom-iframe-integrations/json-web-tokens-jwts\n  if (!demoid) return\n  window.localStorage.cobrowse_demo_id = demoid\n  const res = await fetch(`${cobrowse.api}/api/1/demo/token?cobrowseio_demo_id=${demoid}`)\n  const { token } = await res.json()\n  cobrowse.token = token\n  await refresh()\n}\n\nasync function refresh() {\n  // list some devices to use in example UIs\n  const [devices, sessions] = await Promise.all([\n    cobrowse.devices.list(),\n    cobrowse.sessions.list({state:['active', 'ended'], activated: new Date(0)})\n  ]);\n\n  // subscribe to updates for these resources\n  devices.forEach(device => device.subscribe())\n  // and sessions\n  sessions.forEach(sessions => sessions.subscribe())\n\n  // render the current state on any updates\n  render(devices, sessions)\n  devices.forEach(device => device.on('updated', () => render(devices, sessions)))\n  sessions.forEach(session => session.on('updated', () => render(devices, sessions)))\n}\n\nasync function watch (win) {\n  const ctx = await cobrowse.attachContext(win)\n  ctx.on('session.updated', (session) => {\n    if (session.ended) {\n      win.close()\n      refresh()\n      ctx.destroy()\n    }\n  })\n\n  setTimeout(function () {\n    console.log('ending session')\n    ctx.endSession()\n    ctx.destroy()\n  }, 5000)\n}\n\nfunction connect (device) {\n  watch(window.open(`${cobrowse.api}/connect/device/${device.id}?token=${cobrowse.token}&end_action=none`))\n}\n\nfunction openSession (session) {\n  if (session.recorded && session.state === 'ended')\n    window.open(`${cobrowse.api}/session/${session.id}/recording?token=${cobrowse.token}`)\n  else watch(window.open(`${cobrowse.api}/session/${session.id}?end_action=none&token=${cobrowse.token}`))\n}\n\nasync function handleCode (code) {\n  try {\n    const session = await cobrowse.sessions.get(code)\n    if (session) {\n      openSession(session)\n      return true\n    }\n  } catch(e) {\n    return false\n  }\n}\n\nfunction render (devices=[], sessions=[]) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <div className=\"options\">\n        Demo ID: <input onBlur={e => fetchToken(e.target.value)} defaultValue={window.localStorage.cobrowse_demo_id||''}/>\n      </div>\n      <App\n        devices={devices.map(d => d.toJSON())}\n        sessions={sessions.map(s => s.toJSON())}\n        handleCode={handleCode}\n        connect={connect}\n        openSession={openSession}\n      />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n}\n\nrender();\nfetchToken(window.localStorage.cobrowse_demo_id)\n"],"sourceRoot":""}